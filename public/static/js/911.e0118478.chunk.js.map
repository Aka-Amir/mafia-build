{"version":3,"file":"static/js/911.e0118478.chunk.js","mappings":"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","sources":["app/dashboard/Admin/admin.service.js","app/dashboard/Admin/index.jsx","utils/accessLevels.util.js"],"sourcesContent":["import CONFIG from 'assets/config/server.config';\nimport HttpRequest from 'core/networking/http';\n\nexport class AdminService {\n  #engine = new HttpRequest(CONFIG.CreatePath('admin'));\n  constructor(token) {\n    if (token === '') throw new Error('ERrir');\n    this.#engine.SetHeader('authorization', token);\n  }\n\n  async createAdmin(data) {\n    try {\n      const response = await this.#engine.Post('/signup', data);\n      return {\n        status: 1,\n        data: response.body\n      };\n    } catch (e) {\n      return {\n        status: -1,\n        code: e.response.status\n      };\n    }\n  }\n\n  async defineTask(data) {\n    try {\n      const response = await this.#engine.Post('/tasks', data);\n      return {\n        status: 1,\n        payload: response\n      };\n    } catch (e) {\n      console.trace(e);\n      return {\n        status: -1,\n        payload: e.response\n      };\n    }\n  }\n\n  async getUsers() {\n    try {\n      const response = await this.#engine.Get('/admins');\n      return response.body.Payload;\n    } catch (e) {\n      console.trace(e);\n      return -1;\n    }\n  }\n}\n","import React, { Component, lazy, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { ShowUpAnimated } from 'components/animated/showUp';\nimport { AdminService } from './admin.service';\nimport { GetAccessID } from 'utils/accessLevels.util';\n\nconst ListView = lazy(() => import('./list.view'));\nconst CreateView = lazy(() => import('./create.view'));\nconst TasksView = lazy(() => import('./tasks.view'));\n\nclass AdminModule extends Component {\n  /**\n   * @type { AdminService }\n   */\n  #service;\n  constructor(props) {\n    super(props);\n    this.state = {\n      admins: []\n    };\n    this.#service = new AdminService(props.token);\n  }\n\n  componentDidMount() {\n    this.getAdmins();\n  }\n\n  getAdmins = () => {\n    this.#service.getUsers().then((r) => {\n      this.setState(\n        {\n          admins: r\n        },\n        () => {\n          console.log(this.state);\n        }\n      );\n    });\n  };\n\n  onAdminSelected = (id) => {\n    this.props.redirect(!id ? './create' : `./update/${id}`);\n  };\n\n  createAdmin = async (data) => {\n    try {\n      const response = await this.#service.createAdmin(data);\n      console.log(response);\n      if (response.status === -1) return [false, response.code];\n      this.getAdmins();\n      return [true, response.status];\n    } catch (e) {\n      console.log(e);\n      return [false, -1];\n    }\n  };\n  onUpdate = () => {};\n\n  onAdminDelete = () => {};\n\n  onAssignTask = (id) => {\n    this.props.redirect('./set_task/' + id);\n  };\n\n  SubmitTask = async (data) => {\n    const payload = {\n      ...data,\n      Creator: this.props.user.UserId\n    };\n    const response = await this.#service.defineTask(payload);\n    return response;\n  };\n\n  render() {\n    return (\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <ShowUpAnimated>\n              <Suspense fallback={<>Loading...</>}>\n                <ListView\n                  assingTask={this.onAssignTask}\n                  admins={this.state.admins}\n                  onDelete={this.onAdminDelete}\n                  onSelect={this.onAdminSelected}\n                  myAccess={GetAccessID(this.props.user.Access)}\n                />\n              </Suspense>\n            </ShowUpAnimated>\n          }\n        />\n        <Route\n          path=\"/update/:id\"\n          element={\n            <ShowUpAnimated>\n              <Suspense fallback={<>Loading...</>}>\n                <CreateView\n                  onGoBack={() => {\n                    this.props.redirect('./');\n                  }}\n                  admins={this.state.admins}\n                  onCreate={this.onUpdate}\n                />\n              </Suspense>\n            </ShowUpAnimated>\n          }\n        />\n        <Route\n          path=\"/create\"\n          element={\n            <ShowUpAnimated>\n              <Suspense fallback={<>Loading...</>}>\n                <CreateView\n                  onGoBack={() => {\n                    this.props.redirect('./');\n                  }}\n                  onCreate={this.createAdmin}\n                  admins={this.state.admins}\n                />\n              </Suspense>\n            </ShowUpAnimated>\n          }\n        />\n        <Route\n          path=\"/set_task/:id\"\n          element={\n            <ShowUpAnimated>\n              <Suspense fallback={<>Loading...</>}>\n                <TasksView\n                  onSubmit={this.SubmitTask}\n                  defaultMode={0}\n                  retry={async (id) => {\n                    const data = await this.#service.getUsers();\n                    if (data !== -1) {\n                      this.setState({\n                        admins: data\n                      });\n                      return data.find((i) => i._id === id);\n                    } else return false;\n                  }}\n                  getAdmin={(id) => this.state.admins.find((i) => i._id === id)}\n                  onGoBack={() => {\n                    this.props.redirect('./');\n                  }}\n                />\n              </Suspense>\n            </ShowUpAnimated>\n          }\n        />\n        <Route\n          path=\"/set_msg/:id\"\n          element={\n            <ShowUpAnimated>\n              <Suspense fallback={<>Loading...</>}>\n                <TasksView\n                  onSubmit={this.SubmitTask}\n                  defaultMode={4}\n                  retry={async (id) => {\n                    const data = await this.#service.getUsers();\n                    if (data !== -1) {\n                      this.setState({\n                        admins: data\n                      });\n                      return data.find((i) => i._id === id);\n                    } else return false;\n                  }}\n                  getAdmin={(id) => this.state.admins.find((i) => i._id === id)}\n                  onGoBack={() => {\n                    this.props.redirect('./');\n                  }}\n                />\n              </Suspense>\n            </ShowUpAnimated>\n          }\n        />\n      </Routes>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state;\nexport const AdminComponent = connect(mapStateToProps)(AdminModule);\nexport default AdminComponent;\n","export const PanelSections = {\n  FullAccess: 'FullAccess',\n  Accounting: 'Accounting',\n  Game: 'Game',\n  Files: 'Files',\n  Shop: 'Shop'\n};\n\nexport const SectionsAccessbility = {\n  FullAccess: 'FullAccess',\n  Create: 'Create',\n  Delete: 'Delete',\n  Modify: 'Modify',\n  Get: 'Get'\n};\n\n/**\n *\n * @param {\"FullAccess\" | \"Accounting\" | \"Game\" | \"Files\" | \"Shop\"} section\n * @param {Array<\"FullAccess\" | \"Create\" | \"Delete\" | \"Modify\" | \"Get\">} accessbilities\n */\nexport const GeneratePanelAccess = (section, accessbilities) => {\n  if (!Object.keys(PanelSections).includes(section)) throw new Error('ArgumentError');\n\n  for (const accessLevel of accessbilities) {\n    if (!Object.keys(SectionsAccessbility).includes(accessLevel)) {\n      throw new Error('WrongAccessLevel');\n    }\n  }\n\n  return {\n    [section]: accessbilities\n  };\n};\n\nexport const accessID = Object.freeze({\n  manager: 1,\n  shop_manager: 2,\n  analyzer: 3\n});\n\nexport const accessLevels = [\n  {\n    name: 'آنالیزور',\n    id: accessID.analyzer,\n    detail: {\n      ...GeneratePanelAccess(PanelSections.Accounting, [SectionsAccessbility.FullAccess]),\n      ...GeneratePanelAccess(PanelSections.Shop, [SectionsAccessbility.Get]),\n      ...GeneratePanelAccess(PanelSections.Files, [SectionsAccessbility.Get])\n    }\n  },\n  {\n    name: 'مدیر فروشگاه',\n    id: accessID.shop_manager,\n    detail: {\n      ...GeneratePanelAccess(PanelSections.Shop, [SectionsAccessbility.FullAccess]),\n      ...GeneratePanelAccess(PanelSections.Files, [SectionsAccessbility.FullAccess])\n    }\n  },\n  {\n    name: 'مدیریت',\n    id: accessID.manager,\n    detail: {\n      ...GeneratePanelAccess(PanelSections.FullAccess, [SectionsAccessbility.FullAccess])\n    }\n  }\n];\n\nexport function GetAccessLevelName(access) {\n  const accessString = JSON.stringify(access);\n  const matchingItem = accessLevels.find((i) => {\n    return JSON.stringify(i.detail) === accessString;\n  });\n  if (!matchingItem) return 'ادمین';\n  return matchingItem.name;\n}\n\nexport function GetAccessID(access) {\n  const accessString = JSON.stringify(access);\n  const matchingItem = accessLevels.find((i) => {\n    return JSON.stringify(i.detail) === accessString;\n  });\n  if (!matchingItem) return 0;\n  return matchingItem.id;\n}\n"],"names":["AdminService","token","HttpRequest","CONFIG","Error","this","SetHeader","data","Post","response","status","body","code","payload","console","trace","Get","Payload","ListView","lazy","CreateView","TasksView","AdminModule","props","getAdmins","getUsers","then","r","setState","admins","log","state","onAdminSelected","id","redirect","createAdmin","onUpdate","onAdminDelete","onAssignTask","SubmitTask","Creator","user","UserId","defineTask","path","element","Suspense","fallback","assingTask","onDelete","onSelect","myAccess","GetAccessID","Access","onGoBack","onCreate","onSubmit","defaultMode","retry","find","i","_id","getAdmin","Component","AdminComponent","connect","PanelSections","FullAccess","Accounting","Game","Files","Shop","SectionsAccessbility","Create","Delete","Modify","GeneratePanelAccess","section","accessbilities","Object","keys","includes","accessLevel","accessID","freeze","manager","shop_manager","analyzer","accessLevels","name","detail","GetAccessLevelName","access","accessString","JSON","stringify","matchingItem"],"sourceRoot":""}