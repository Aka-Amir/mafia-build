{"version":3,"file":"static/js/992.240f8d6a.chunk.js","mappings":"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","sources":["app/dashboard/Statistics/index.jsx"],"sourcesContent":["import React from 'react';\nimport { ShowUpAnimated } from 'components/animated/showUp';\nimport { connect } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { StatisticsService } from './statistics.service';\nimport './style.scss';\n\nconst Users = React.lazy(() => import('./users.view'));\nconst Shop = React.lazy(() => import('./shop.view'));\nconst View = React.lazy(() => import('./index.view'));\n\nclass StatisticsModule extends React.Component {\n  /**\n   * @type { StatisticsService }\n   */\n  #service = undefined;\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateRegister: [],\n      registeredCount: 0,\n      shopData: [],\n      sellingPlatformData: [],\n      sellingPlatformCount: [],\n      isLoading: true,\n      onlineCount: 0,\n      mostSellingProductsData: [],\n      _mainUserStatistics: {},\n      _mainShopStatistics: []\n    };\n    this.#service = !StatisticsService.instance\n      ? new StatisticsService(props.token || props.auth)\n      : StatisticsService.instance;\n  }\n\n  componentDidMount() {\n    if (!this.tryReadUsersStatisticsFromStore()) this.getUserStatistics();\n    if (!this.tryReadShopStatisticsFromStore()) this.getShopStatistics();\n  }\n\n  tryReadUsersStatisticsFromStore = () => {\n    if (!this.props.statistics.users) return false;\n    this.onUsersDataRcieved(this.props.statistics.users);\n    return true;\n  };\n\n  tryReadShopStatisticsFromStore = () => {\n    if (!this.props.statistics.shop) return false;\n    this.onShopDataRecieved(this.props.statistics.shop);\n    return true;\n  };\n\n  onUsersDataRcieved = (response) => {\n    const data = [];\n    const all = response.UsersCount;\n    const online = response.OnlineUsersCount;\n    for (const item in all.NumberOfRegistrationsByDate) {\n      data.push({\n        date: item,\n        'افراد ثبت نام شده': all.NumberOfRegistrationsByDate[item]\n      });\n    }\n    this.setState({\n      dateRegister: data,\n      registeredCount: all.UserCount,\n      isLoading: false,\n      onlineCount: online,\n      _mainUserStatistics: all\n    });\n  };\n\n  onShopDataRecieved = (response) => {\n    this.setState(\n      {\n        _mainShopStatistics: response\n      },\n      () => {\n        this.getFirstLevel();\n        this.getMostSellingPlatform();\n        this.getMostFactorRegisteredPlatform();\n        this.getMostSelling();\n        this.getProfit();\n      }\n    );\n  };\n\n  getUserStatistics = () =>\n    this.#service.GetUsersStatistics().then((response) => {\n      if (response === 0) return;\n      this.onUsersDataRcieved(response);\n    });\n\n  getShopStatistics = () =>\n    this.#service.GetShopStatistics().then((response) => {\n      if (response === 0) return;\n      this.onShopDataRecieved(response);\n    });\n\n  getFirstLevel = () => {\n    this.setState({\n      shopData: this.#service.shopStatisticsService(this.state._mainShopStatistics).getBasic()\n    });\n  };\n\n  getProfit = () => {\n    const profit = this.#service\n      .shopStatisticsService(this.state._mainShopStatistics)\n      .getProfitAmount();\n    console.log(profit);\n    // console.log(profit.precentage);\n  };\n\n  /**\n   *\n   * @param { Date } from\n   * @param { Date } to\n   */\n  getShopStatisticsRange = (from, to) => {\n    this.setState({\n      shopData: this.#service\n        .shopStatisticsService(this.state._mainShopStatistics)\n        .getRange(from, to)\n    });\n  };\n\n  /**\n   *\n   * @param { String } key\n   */\n  getShopStatisticsByKey = (key) => {\n    const instance = this.#service.shopStatisticsService(this.state._mainShopStatistics);\n\n    this.setState({\n      shopData: !key ? instance.getBasic() : instance.getFromDate(key)\n    });\n  };\n\n  getMostSelling = () => {\n    const result = this.#service\n      .shopStatisticsService(this.state._mainShopStatistics)\n      .getMostSelling();\n    this.setState({\n      mostSellingProductsData: result\n    });\n  };\n\n  getMostSellingPlatform = () => {\n    const result = this.#service\n      .shopStatisticsService(this.state._mainShopStatistics)\n      .getMostSellingPlatform();\n    this.setState({\n      sellingPlatformData: result\n    });\n    return result;\n  };\n\n  getMostFactorRegisteredPlatform = () => {\n    const result = this.#service\n      .shopStatisticsService(this.state._mainShopStatistics)\n      .getMostFactorCountPlatform();\n    this.setState({\n      sellingPlatformCount: result\n    });\n    return result;\n  };\n\n  factorsDispatcher = (dispatchLevel) => {\n    switch (dispatchLevel) {\n      case 1:\n        return this.getMostSellingPlatform();\n      case 2:\n        return this.getMostFactorRegisteredPlatform();\n      default:\n        return this.getMostSellingPlatform();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.isLoading ? (\n          <>Loading...</>\n        ) : (\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <React.Suspense fallback={<>Loading...</>}>\n                  <ShowUpAnimated>\n                    <View />\n                  </ShowUpAnimated>\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"/users\"\n              element={\n                <React.Suspense fallback={<>Loading...</>}>\n                  <ShowUpAnimated>\n                    <Users\n                      onlineUsers={this.state.onlineCount}\n                      registeredCount={this.state.registeredCount}\n                      dateRegister={this.state.dateRegister}\n                    />\n                  </ShowUpAnimated>\n                </React.Suspense>\n              }\n            />\n            <Route\n              path=\"/shop\"\n              element={\n                <React.Suspense fallback={<>Loading...</>}>\n                  <ShowUpAnimated>\n                    <Shop\n                      sellingPlatformData={this.state.sellingPlatformData}\n                      sellingPlatformCount={this.state.sellingPlatformCount}\n                      mostSellingProductsData={this.state.mostSellingProductsData}\n                      getMostSelling={this.getMostSelling}\n                      generateNewDataByKey={this.getShopStatisticsByKey}\n                      getRange={this.getShopStatisticsRange}\n                      shopData={this.state.shopData}\n                      dispatchFactor={this.factorsDispatcher}\n                    />\n                  </ShowUpAnimated>\n                </React.Suspense>\n              }\n            />\n          </Routes>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state;\nexport const StatisticsComponent = connect(mapStateToProps)(StatisticsModule);\nexport default StatisticsComponent;\n"],"names":["Users","React","Shop","View","StatisticsModule","props","undefined","tryReadUsersStatisticsFromStore","statistics","users","onUsersDataRcieved","tryReadShopStatisticsFromStore","shop","onShopDataRecieved","response","data","all","UsersCount","online","OnlineUsersCount","item","NumberOfRegistrationsByDate","push","date","setState","dateRegister","registeredCount","UserCount","isLoading","onlineCount","_mainUserStatistics","_mainShopStatistics","getFirstLevel","getMostSellingPlatform","getMostFactorRegisteredPlatform","getMostSelling","getProfit","getUserStatistics","GetUsersStatistics","then","getShopStatistics","GetShopStatistics","shopData","shopStatisticsService","state","getBasic","profit","getProfitAmount","console","log","getShopStatisticsRange","from","to","getRange","getShopStatisticsByKey","key","instance","getFromDate","result","mostSellingProductsData","sellingPlatformData","getMostFactorCountPlatform","sellingPlatformCount","factorsDispatcher","dispatchLevel","StatisticsService","token","auth","this","path","element","fallback","onlineUsers","generateNewDataByKey","dispatchFactor","StatisticsComponent","connect"],"sourceRoot":""}