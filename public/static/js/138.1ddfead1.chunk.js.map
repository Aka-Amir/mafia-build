{"version":3,"file":"static/js/138.1ddfead1.chunk.js","mappings":"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","sources":["app/dashboard/Statistics/shop.view.jsx"],"sourcesContent":["import { Button, ButtonGroup, IconButton, TextField, Typography } from '@mui/material';\nimport React from 'react';\nimport MUITooltip from '@mui/material/Tooltip';\nimport {\n  BarChart,\n  PieChart,\n  Pie,\n  Cell,\n  Bar,\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport PermDataSettingIcon from '@mui/icons-material/PermDataSetting';\nimport BackIcon from '@mui/icons-material/ArrowBackIosNewOutlined';\nimport CloseIcon from '@mui/icons-material/CloseRounded';\nimport BarChartRoundedIcon from '@mui/icons-material/BarChartRounded';\nimport TimelineRoundedIcon from '@mui/icons-material/TimelineRounded';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nconst chartModes = Object.freeze({\n  baar: 1,\n  line: 2\n});\n\nconst colors = {\n  بازار: '#4DBD60',\n  مایکت: '#0091EA',\n  'زرین پال': '#e6c907'\n};\n\nexport function ShopView(props) {\n  const [canGoDeeper, setAccess] = React.useState(true);\n  const [value, setValue] = React.useState(null);\n  const [openDialog, setDialogState] = React.useState(false);\n  const [fromDate, setFromDate] = React.useState(null);\n  const [toDate, setToDate] = React.useState(null);\n  const [chartMode, setChartMode] = React.useState(chartModes.line);\n\n  // Dialog UI States\n  const [settingState, setSettingState] = React.useState(1);\n\n  const goDeeper = (k) => {\n    props.generateNewDataByKey(k);\n    setAccess(false);\n  };\n\n  const goSurface = () => {\n    props.generateNewDataByKey('');\n    setAccess(true);\n    setValue(null);\n    console.log(props.shopData);\n  };\n\n  const setDate = (v) => {\n    setValue(v);\n  };\n\n  const calculateSingleDate = () => {\n    if (value === null) return;\n    const date = new Date(value);\n    const keyFormat = `${date.getFullYear()}/${date.getMonth()}/${date.getDate()}`;\n    console.log(keyFormat);\n    goDeeper(keyFormat);\n  };\n\n  const setFrom = (v) => {\n    setFromDate(v);\n  };\n\n  const setTo = (v) => {\n    setToDate(v);\n  };\n\n  const calculateDate = () => {\n    if (fromDate !== null && toDate !== null) {\n      props.getRange(fromDate, toDate);\n      setAccess(false);\n    }\n  };\n\n  const changeSettingState = (number) => () => {\n    setSettingState(number);\n  };\n  const changeChartState = (mode) => () => {\n    setChartMode(mode);\n  };\n\n  const onClose = () => {\n    if (openDialog) setDialogState(false);\n    switch (settingState) {\n      case 1: // range\n        calculateDate();\n        break;\n      case 2: // Single\n        calculateSingleDate();\n        break;\n      default:\n        goSurface();\n        break;\n    }\n  };\n\n  const renderCustomizedLabel =\n    (data) =>\n    // eslint-disable-next-line react/display-name\n    ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n      const RADIAN = Math.PI / 180;\n      const radius = innerRadius + (outerRadius - innerRadius) * 5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return (\n        <>\n          <text\n            style={{ fontSize: '0.8rem' }}\n            x={x}\n            y={y}\n            fill={colors[data[index].platform]}\n            textAnchor={'middle'}\n            dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`} {data[index].platform}\n          </text>\n          <text\n            x={x}\n            y={y + 15}\n            style={{ fontSize: '0.5rem' }}\n            fill={colors[data[index].platform]}\n            textAnchor={'middle'}\n            dominantBaseline=\"central\">\n            {data[index].sellAmount}\n          </text>\n        </>\n      );\n    };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <Dialog open={openDialog} fullWidth onClose={onClose}>\n          <DialogTitle>\n            <div className=\"row\">\n              <div className=\"col-1\">\n                <IconButton onClick={onClose} color=\"secondary\">\n                  <CloseIcon />\n                </IconButton>\n              </div>\n              <div className=\"col-10 pt-1\">تنظیمات</div>\n            </div>\n          </DialogTitle>\n          <DialogContent>\n            <div className=\"row\">\n              <div className=\"col-12 text-end\">\n                <ButtonGroup\n                  size=\"small\"\n                  color=\"secondary\"\n                  aria-label=\"medium secondary button group\">\n                  <Button\n                    variant={settingState === 1 ? 'contained' : 'outlined'}\n                    onClick={changeSettingState(1)}>\n                    انتخاب بین دو تاریخ\n                  </Button>\n                  <Button\n                    variant={settingState === 2 ? 'contained' : 'outlined'}\n                    onClick={changeSettingState(2)}>\n                    نمایش ریز نتایج\n                  </Button>\n                </ButtonGroup>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-12 p-5\">\n                {settingState === 1 && (\n                  <div className=\"row\">\n                    <div className=\"col-6 text-center\">\n                      <MobileDatePicker\n                        label=\"از تاریخ\"\n                        value={fromDate}\n                        inputFormat={'YYYY/MM/DD'}\n                        DialogProps={{\n                          fullWidth: true\n                        }}\n                        InputProps={{\n                          dir: 'ltr'\n                        }}\n                        OpenPickerButtonProps={{\n                          color: 'primary'\n                        }}\n                        onChange={setFrom}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </div>\n                    <div className=\"col-6 text-center\">\n                      <MobileDatePicker\n                        label=\"تا تاریخ\"\n                        value={toDate}\n                        inputFormat={'YYYY/MM/DD'}\n                        DialogProps={{\n                          fullWidth: true\n                        }}\n                        InputProps={{\n                          dir: 'ltr'\n                        }}\n                        OpenPickerButtonProps={{\n                          color: 'primary'\n                        }}\n                        onChange={setTo}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </div>\n                  </div>\n                )}\n                {settingState === 2 && (\n                  <div className=\"row\">\n                    <div className=\"col-12\">\n                      <MobileDatePicker\n                        label=\"تاریخ\"\n                        value={value}\n                        inputFormat={'YYYY/MM/DD'}\n                        DialogProps={{\n                          fullWidth: true\n                        }}\n                        InputProps={{\n                          dir: 'ltr'\n                        }}\n                        OpenPickerButtonProps={{\n                          color: 'secondary'\n                        }}\n                        onChange={setDate}\n                        renderInput={(params) => <TextField {...params} />}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n        <div className=\"row\">\n          <div className=\"col-12 mt-5 px-5\">\n            <Typography align=\"center\" variant=\"h5\">\n              آمار فروش\n            </Typography>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-5 text-end\">\n            <MUITooltip title={canGoDeeper ? 'تنظیمات آماری' : 'بازگشت به آمار کلی'}>\n              {canGoDeeper ? (\n                <IconButton\n                  color=\"primary\"\n                  onClick={() => {\n                    setDialogState(true);\n                  }}>\n                  <PermDataSettingIcon />\n                </IconButton>\n              ) : (\n                <IconButton\n                  color=\"primary\"\n                  onClick={() => {\n                    goSurface();\n                  }}>\n                  <BackIcon />\n                </IconButton>\n              )}\n            </MUITooltip>\n          </div>\n          <div className=\"col-6 text-start\">\n            <ButtonGroup size=\"small\" color=\"secondary\" aria-label=\"medium secondary button group\">\n              <Button\n                variant={chartMode === chartModes.line ? 'contained' : 'outlined'}\n                onClick={changeChartState(chartModes.line)}>\n                <TimelineRoundedIcon />\n              </Button>\n              <Button\n                variant={chartMode === chartModes.baar ? 'contained' : 'outlined'}\n                onClick={changeChartState(chartModes.baar)}>\n                <BarChartRoundedIcon />\n              </Button>\n            </ButtonGroup>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {props.shopData.length === 0 ? (\n              <div className=\"row\">\n                <div className=\"col-12 p-5\">\n                  <Typography align=\"center\">هیچ فاکتوری برای این روز ثبت نشده !</Typography>\n                </div>\n              </div>\n            ) : (\n              <ResponsiveContainer width={'100%'} height={390}>\n                {chartMode === chartModes.line ? (\n                  <LineChart\n                    width={700}\n                    height={800}\n                    data={props.shopData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      bottom: 5\n                    }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"مقدار فروش\"\n                      stroke=\"#8884d8\"\n                      activeDot={{ r: 1 }}\n                    />\n                  </LineChart>\n                ) : (\n                  <BarChart\n                    width={700}\n                    height={800}\n                    data={props.shopData}\n                    margin={{\n                      top: 5,\n                      right: 30,\n                      bottom: 5\n                    }}\n                    barSize={10}\n                    barGap={10}\n                    outerRadius={40}>\n                    <CartesianGrid strokeDasharray=\"5 5\" />\n                    <XAxis dataKey=\"date\" scale=\"point\" padding={{ left: 50, right: 50 }} />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar background={{ fillOpacity: 0 }} dataKey=\"مقدار فروش\" fill=\"#8884d8\" />\n                  </BarChart>\n                )}\n              </ResponsiveContainer>\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 mt-5 px-5\">\n            <Typography align=\"center\" variant=\"h5\">\n              آمار فروش محصولات\n            </Typography>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ResponsiveContainer width={'100%'} height={390}>\n              <BarChart\n                width={700}\n                height={800}\n                data={props.mostSellingProductsData}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  bottom: 5\n                }}\n                barSize={10}\n                barGap={10}\n                outerRadius={40}>\n                <CartesianGrid strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"date\" scale=\"point\" padding={{ left: 100, right: 100 }} />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"مقدار فروش\" fill=\"#8884d8\" background={{ fill: 'transparent' }} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 mt-5 px-5\">\n            <Typography align=\"center\" variant=\"h5\">\n              آمار پلتفرم ها\n            </Typography>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row p-5\">\n          <div className=\"col-md-5 card-bg m-auto shadow p-0 my-3\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <Typography align=\"center\" className=\"pt-5\">\n                  مقدار فروش\n                </Typography>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12 p-0\">\n                <ResponsiveContainer width={'100%'} height={150}>\n                  <PieChart width={250} height={250}>\n                    <Pie\n                      data={props.sellingPlatformData}\n                      cx={'50%'}\n                      cy={'50%'}\n                      labelLine={false}\n                      label={renderCustomizedLabel(props.sellingPlatformData)}\n                      outerRadius={50}\n                      innerRadius={40}\n                      fill=\"#000\"\n                      dataKey=\"sellAmount\">\n                      {props.sellingPlatformData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={colors[entry.platform]} />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-5 card-bg m-auto shadow p-0 my-3\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <Typography align=\"center\" className=\"pt-5\">\n                  تعداد فاکتور های ثبت شده\n                </Typography>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12 p-0\">\n                <ResponsiveContainer width={'100%'} height={150}>\n                  <PieChart width={250} height={250}>\n                    <Pie\n                      data={props.sellingPlatformCount}\n                      cx={'50%'}\n                      cy={'50%'}\n                      labelLine={false}\n                      label={renderCustomizedLabel(props.sellingPlatformCount)}\n                      outerRadius={50}\n                      innerRadius={40}\n                      fill=\"#8884d8\"\n                      dataKey=\"sellAmount\">\n                      {props.sellingPlatformCount.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={colors[entry.platform]} />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ShopView;\n"],"names":["chartModes","Object","freeze","baar","line","colors","بازار","مایکت","ShopView","props","React","canGoDeeper","setAccess","value","setValue","openDialog","setDialogState","fromDate","setFromDate","toDate","setToDate","chartMode","setChartMode","settingState","setSettingState","goSurface","generateNewDataByKey","console","log","shopData","calculateSingleDate","k","date","Date","keyFormat","getFullYear","getMonth","getDate","changeSettingState","number","changeChartState","mode","onClose","getRange","renderCustomizedLabel","data","cx","cy","midAngle","innerRadius","outerRadius","percent","index","RADIAN","Math","PI","radius","x","cos","y","sin","style","fontSize","fill","platform","textAnchor","dominantBaseline","toFixed","sellAmount","className","open","fullWidth","onClick","color","size","variant","label","inputFormat","DialogProps","InputProps","dir","OpenPickerButtonProps","onChange","v","renderInput","params","align","title","length","width","height","margin","top","right","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","barSize","barGap","scale","padding","left","background","fillOpacity","mostSellingProductsData","sellingPlatformData","labelLine","map","entry","sellingPlatformCount"],"sourceRoot":""}